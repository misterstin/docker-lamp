puedes cambiar el supuesto practico, que no sea una lista de tareas, usa cualquier otra cosa, haz que el estilo no vaya en un css sino que sean unas lineas html que tenga que poner al principio y al final de cada archivo php (proporcioname esas lineas tu)
¡Entendido! Cambiemos el ejercicio a una aplicación simple de registro de libros leídos. Mantendremos la estructura de múltiples archivos PHP y agregaremos estilos directamente en las líneas HTML.
Instrucciones del Ejercicio
1.
Configura tu entorno LAMP en Docker.
2.
Crea una base de datos en MySQL para almacenar los libros.
3.
Desarrolla los siguientes archivos PHP:
•
index.php: Formulario para agregar y mostrar libros.
•
add_book.php: Procesa el formulario y agrega un libro a la base de datos.
•
delete_book.php: Elimina un libro de la base de datos.
•
config.php: Archivo de configuración para la conexión a la base de datos.
Estructura del Proyecto
/booklist
├── add_book.php
├── config.php
├── delete_book.php
├── index.php
└── docker-compose.yml
Paso 1: Crear la Base de Datos
Conéctate a MySQL y ejecuta los siguientes comandos SQL para crear la base de datos y la tabla de libros:
sql
CREATE DATABASE booklist;
USE booklist;
CREATE TABLE books (
id INT AUTO_INCREMENT PRIMARY KEY,
title VARCHAR(255) NOT NULL,
author VARCHAR(255) NOT NULL
);
Paso 2: Docker Compose (Opcional)
Si deseas usar Docker para configurar el entorno LAMP, aquí tienes un ejemplo de docker-compose.yml:
yaml
version: '3.1'
services:
web:
image: php:apache
volumes:
- ./booklist:/var/www/html
ports:
- "8080:80"
db:
image: mysql:5.7
environment:
MYSQL_ROOT_PASSWORD: rootpassword
MYSQL_DATABASE: booklist
Paso 3: Archivo de Configuración (config.php)
Este archivo contendrá la configuración para la conexión a la base de datos:
php
<?php
$servername = "db";
$username = "root";
$password = "rootpassword";
$dbname = "booklist";
$conn = new mysqli($servername, $username, $password, $dbname);
if ($conn->connect_error) {
die("Connection failed: " . $conn->connect_error);
}
?>
Paso 4: Formulario y Mostrar Libros (index.php)
Encabezado HTML
html
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
body {
font-family: Arial, sans-serif;
background-color: #f0f0f0;
text-align: center;
margin-top: 50px;
}
h1 {
color: #333;
}
form {
margin-bottom: 20px;
}
input[type="text"] {
padding: 10px;
width: 200px;
margin-right: 10px;
}
button {
padding: 10px 20px;
background-color: #5cb85c;
color: white;
border: none;
cursor: pointer;
}
ul {
list-style-type: none;
padding: 0;
}
li {
padding: 10px;
background-color: white;
margin-bottom: 5px;
}
a {
color: red;
text-decoration: none;
}
</style>
<title>Lista de Libros</title>
</head>
<body>
Pie de página HTML
html
</body>
</html>
Código PHP en index.php
php
<?php include 'config.php'; ?>
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Lista de Libros</title>
</head>
<body>
<h1>Lista de Libros</h1>
<form action="add_book.php" method="POST">
<input type="text" name="title" placeholder="Título del libro" required>
<input type="text" name="author" placeholder="Autor del libro" required>
<button type="submit">Agregar</button>
</form>
<h2>Libros:</h2>
<ul>
<?php
$result = $conn->query("SELECT * FROM books");
while ($row = $result->fetch_assoc()) {
echo "<li>" . $row['title'] . " por " . $row['author'] . " <a href='delete_book.php?id=" . $row['id'] . "'>Eliminar</a></li>";
}
?>
</ul>
</body>
</html>
Paso 5: Procesar y Agregar Libros (add_book.php)
php
<?php
include 'config.php';
if ($_SERVER["REQUEST_METHOD"] == "POST") {
$title = $conn->real_escape_string($_POST['title']);
$author = $conn->real_escape_string($_POST['author']);
$sql = "INSERT INTO books (title, author) VALUES ('$title', '$author')";
if ($conn->query($sql) === TRUE) {
echo "Nuevo libro agregado con éxito.";
} else {
echo "Error: " . $sql . "<br>" . $conn->error;
}
}
header("Location: index.php");
exit();
?>
Paso 6: Eliminar Libros (delete_book.php)
php
<?php
include 'config.php';
if (isset($_GET['id'])) {
$id = $conn->real_escape_string($_GET['id']);
$sql = "DELETE FROM books WHERE id=$id";
if ($conn->query($sql) === TRUE) {
echo "Libro eliminado con éxito.";
} else {
echo "Error: " . $conn->error;
}
}
header("Location: index.php");
exit();
?>
Cómo Usar las Líneas HTML
1.
Encabezado HTML: Pega estas líneas al principio de cada archivo PHP.
2.
Pie de página HTML: Pega estas líneas al final de cada archivo PHP.
Encabezado HTML
html
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
body {
font-family: Arial, sans-serif;
background-color: #f0f0f0;
text-align: center;
margin-top: 50px;
}
h1 {
color: #333;
}
form {
margin-bottom: 20px;
}
input[type="text"] {
padding: 10px;
width: 200px;
margin-right: 10px;
}
button {
padding: 10px 20px;
background-color: #5cb85c;
color: white;
border: none;
cursor: pointer;
}
ul {
list-style-type: none;
padding: 0;
}
li {
padding: 10px;
background-color: white;
margin-bottom: 5px;
}
a {
color: red;
text-decoration: none;
}
</style>
<title>Lista de Libros</title>
</head>
<body>
Pie de página HTML
html
</body>
</html>
Con esto, tendrás una aplicación simple para registrar, mostrar y eliminar libros leídos. ¡Disfruta practicando y no dudes en preguntarme si necesitas más ayuda
